var fixTo = (function(value, num) {
    num = undefined === num ? 2 : num;
    value = parseFloat(value);
    return (value.toFixed(num))
});
var dateFormat = (function(timestamp, format) {
    var regYear = getRegExp("(y+)", "i");
    if (!format) {
        format = "yyyy-MM-dd hh:mm:ss"
    };
    timestamp = parseInt(timestamp * 1000);
    var realDate = getDate(timestamp);

    function timeFormat(num) {
        return (num < 10 ? '0' + num : num)
    };
    var date = [
        ["M+", timeFormat(realDate.getMonth() + 1)],
        ["d+", timeFormat(realDate.getDate())],
        ["h+", timeFormat(realDate.getHours())],
        ["m+", timeFormat(realDate.getMinutes())],
        ["s+", timeFormat(realDate.getSeconds())],
        ["q+", Math.floor((realDate.getMonth() + 3) / 3)],
        ["S+", realDate.getMilliseconds()]
    ];
    var reg1 = regYear.exec(format);
    if (reg1) {
        format = format.replace(reg1[(1)], (realDate.getFullYear() + '').substring(4 - reg1[(1)].length))
    };
    for (var i = 0; i < date.length; i++) {
        var k = date[((nt_2 = (i), null == nt_2 ? undefined : 'number' === typeof nt_2 ? nt_2 : "" + nt_2))][(0)];
        var v = date[((nt_3 = (i), null == nt_3 ? undefined : 'number' === typeof nt_3 ? nt_3 : "" + nt_3))][(1)];
        var reg2 = getRegExp("(" + k + ")").exec(format);
        if (reg2) {
            format = format.replace(reg2[(1)], reg2[(1)].length == 1 ? v : ("00" + v).substring(("" + v).length))
        }
    };
    return (format)
});
module.exports = ({
    fixTo: fixTo,
    dateFormat: dateFormat,
});